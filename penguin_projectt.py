# -*- coding: utf-8 -*-
"""penguin projectt.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y6yD9m_iMRtShdnFEmEX5TZsbYf1cIGb

# **PENGUIN DATASET ANALYSIS PROJECT**
**THE MAIN GOAL OF THIS PROJECT IS TO CLEAN AND ANALYZE THE PALMER PENGUIN DATASET TO UNDERSTAND PENGUIN MEASUREMENTS AND PATTERNS.**

---

# **1.Load dataset**
"""

import pandas as pd
df=pd.read_csv('penguins_size.csv')


"""---

# **2. Initial Data Exploration**
"""

# View first five rows
df.head()

# Data info
df.info()

#columns
df.columns

# Statistical summary
df.describe()

"""---

# **3. Data Cleaning**
"""

# Check missing values
df.isnull().sum()

# Drop rows with missing values
df.dropna()

# Check for duplicates
df=df.drop_duplicates()
df

# Check data type.
df.dtypes

df.loc[336]

"""---

### **BASIC DISCRIPTIVE QUESTIONS**
"""

# How many penguins are there in the dataset?
total_penguins=len(df)

# What is standard deviation of body mass?
std_body_mass=df['body_mass_g'].std()
std_body_mass

# What are the names of all columns in the dataset?
column_names=df.columns
column_names

# How many unique species of penguin are there?
unique_species=df['species'].nunique()
unique_species

# How many penguins are there for each species?
penguins_per_species=df['species'].value_counts()
penguins_per_species

# What is the average body mass of all penguins?
average_body_mass=df['body_mass_g'].mean()
average_body_mass

# What is the minimum and maximum culmen length?
min_culmen_length=df['culmen_length_mm'].min()
max_culmen_length=df['culmen_length_mm'].max()
print('minimum:',min_culmen_length)
print('maximum:',max_culmen_length)

# How many male and female penguins are there?
gender_counts=df['sex'].value_counts()
gender_counts

# What is the most common island in the dataset?
most_common_island=df['island'].mode()
most_common_island

# Are there any missing values in the dataset?
missing_values=df.isnull().sum()
missing_values

# What is the average flipper length for each species?
average_flipper_length=df.groupby('species')['flipper_length_mm'].mean()
average_flipper_length

"""---

### **COMPARISION AND GROUPING**
"""

# Which species has the highest average body mass?
average_body_mass=df.groupby('species')['body_mass_g'].mean()
highest_average_species=average_body_mass.idxmax()
highest_average_species

# Are Gentoo penguin heavier than 5000g on average?
gentoo_average_mass=df[df['species']=='Gentoo']['body_mass_g'].mean()
gentoo_average_mass

# Which island has the highest penguins?
island_with_most_penguins=df['island'].value_counts().idxmax()
island_with_most_penguins

# What is the average culmen depth for each species?
average_culmen_depth=df.groupby('species')['culmen_depth_mm'].mean()
average_culmen_depth

# Do male penguins  have longer flippers than female on average?
average_flipper_length_by_sex=df.groupby('sex')['flipper_length_mm'].mean()
average_flipper_length_by_sex

"""---

### **GRAPH - BASED QUESTIONS**

# **BARPLOT**

### > A bar plot represents an estimate of the central tendency for a numeric variable with the height of each rectangle.
"""

# Plot a bar chart of penguin species counts.
import matplotlib.pyplot as plt
species_counts=df['species'].value_counts()
species_counts.plot(kind='bar')
plt.xlabel('Species')
plt.ylabel('Count')
plt.title('Penguin Species Counts')
st.pyplot(fig)

#Plot the flipper lengths of penguin species.
import seaborn as sns
sns.barplot(x ="species", y="flipper_length_mm", data=df)
plt.title("Flipper Length for 3 Penguin Species", size=20, color="red")
st.pyplot(fig)

# Plot the flipper lengths of penguin species by sex.
sns.barplot(x = "species", y = "flipper_length_mm", data =df, hue = "sex")
plt.title("Flipper Length for 3 Penguin Species by Sex", size=20, color="red")
st.pyplot(fig)

"""# **HISTOGRAM**

> The histogram plot shows the distribution of the data. Histogram plot is used to see the distribution of one or more variables.




"""

# Plot a histogram of penguin body mass.
import seaborn as sns
plt.hist(df['body_mass_g'],bins=10)
plt.xlabel('Body Mass (g)')
plt.ylabel('Frequency')
plt.title('Distribution of Penguin Body Mass')
st.pyplot(fig)

# Plot a histogram of flipper length.
sns.histplot(x ="flipper_length_mm", data=df)
plt.title("Flipper Length", size=20)
st.pyplot(fig)

# Flipping the above  graph with the y argument.
sns.histplot(y = "flipper_length_mm", data = df)
plt.title("Flipper Length", size=20)
st.pyplot(fig)

"""# **SCATTER PLOT**

> The scatter plot is used to display the relationship between variables.


"""

# Draw a scatter plot of culmen length vs flipper length, colored by species.
sns.scatterplot(data=df,x='culmen_length_mm',y='flipper_length_mm',hue='species')
st.pyplot(fig)

# Draw a scatter plot of culmen length vs culmen depth, colored by species.
sns.scatterplot(x="culmen_length_mm", y="culmen_depth_mm", data=df, hue="species")
plt.title("Culmenl Length vs Culmen Depth", size=20)
st.pyplot(fig)

"""# **BOXPLOT**

> The box plot is used to compare the distribution of numerical data between levels of a categorical variable.




"""

# Create a boxplot comparing body mass across species.
sns.boxplot(data=df,x='species',y='body_mass_g')
st.pyplot(fig)
# Create a boxplot comparing flipper length for three penguin across species.
sns.boxplot(x = "species", y = "flipper_length_mm", data =df)
plt.title("Flipper Length for 3 Penguin Species", size=20)
st.pyplot(fig)

# Create a boxplot comparing flipper length for three penguin species by sex across species.
sns.boxplot(x = "species", y = "flipper_length_mm", data =df, hue = "sex")
plt.title("Flipper Length for 3 Penguin Species by Sex", size=20)
st.pyplot(fig)
"""# **PIE CHART**

> A Pie Chart is a circular statistical plot that can display only one series of data. The area of the chart is the total percentage of the given data.


"""

# Make a pie chart showing the proportion of each species.
species_proportion=df['species'].value_counts(normalize=True)
plt.pie(species_proportion,labels=species_proportion.index,autopct='%1.2f%%')
plt.title('Proportion of Each Species')
st.pyplot(fig)

"""# **VIOLIN PLOT**


> This plot is used to compare the distribution of numerical values among categorical variables.




"""

# Compare flipper length and species by violin graph.
sns.violinplot(x = "species", y = "flipper_length_mm", data = df)
plt.title("Flipper Length for 3 Penguin Species", size=20, color="red")
st.pyplot(fig)

# Compare flipper length foe penguin species by sex and species by violin graph.
sns.violinplot(x = "species", y = "flipper_length_mm", data = df, hue = "sex")
plt.title("Flipper Length for 3 Penguin Species by Sex", size=20, color="red")
st.pyplot(fig)
"""# **PAIRPLOT**

> Pairplot method to see the pair relations of the variables. This function creates cross-plots of each numeric variable in the dataset.


"""

# Visually separate the three penguin species using all main physical measurements(culmen length,culmen depth,flipper length,body mass).
sns.pairplot(df, hue = "species", height=3)
st.pyplot(fig)

# Are there strong pairwise correlations among the main physical measurements and do these correlations differ by species?
sns.pairplot(df, hue = "species", height=3, diag_kind="hist")
st.pyplot(fig)

"""# **HEATMAP**

> This technique to see correlations between numerical variables.


"""

# What is the correlation between flipper length and body mass?
correlation=df['flipper_length_mm'].corr(df['body_mass_g'])
correlation

corr=df[['flipper_length_mm','body_mass_g']].corr()
sns.heatmap(corr,annot=True)
plt.title('Correlation matrix')
st.pyplot(fig)

"""# **CONCLUSION:**

# Data visualization is one of the important steps in data science projects. In this notebook, I talked about data visualization with seaborn using the penguin dataset. Seaborn is mainly used for plotting statistical graphs.
"""
